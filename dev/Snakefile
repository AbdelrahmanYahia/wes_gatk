import pandas as pd

sample_table_file=('samples.tsv')
SampleTable = pd.read_table(sample_table_file)


files_R1s = list(SampleTable.iloc[:, 0])
files_R2s = list(SampleTable.iloc[:, 15])
samples = list(SampleTable.iloc[:, 2]) # sample full name
units = list(SampleTable.iloc[:, 1])
samples_IDs = list(SampleTable.iloc[:, 3])
library_index = list(SampleTable.iloc[:, 4])

units = (
    pd.read_csv('samples.tsv', sep="\t", dtype={"sample_id": str, "library_index": str, "lane": str})
    .set_index(["sample_id", "unit"], drop=False)
    .sort_index()
)

# def get_fastqs(wildcards):
#     mydict = dict(
#         zip(
#             ["R1", "R2"],
#                 [
#                     expand(
#                             "{sample}_{unit}_1.fq.gz",
#                             unit=units.loc[wildcards.sample, "library_index"].tolist(),
#                             sample=wildcards.sample,
#                             lane=units.loc[wildcards.sample, "lane"].unique().tolist(),
#                         ),

#                     expand(
#                             "{sample}_{unit}_2.fq.gz",
#                             unit=units.loc[wildcards.sample, "library_index"].tolist(),
#                             sample=wildcards.sample,
#                             lane=units.loc[wildcards.sample, "lane"].unique().tolist()
#                         )
#                 ]
#         )
#     )
#     return mydict



def get_align_input(wildcards):

    return expand(
            "align/{sample}_{unit}.bam",
            unit=units.loc[wildcards.sample, "unit"].tolist(),
            sample=wildcards.sample
        )



rule all:
    input:
        expand("{sample}.merged", sample = samples_IDs)

rule trim:
    input:
        R1 = "/home/marc/wes_gatk/dev/empty_sample_names/{sample}_{unit}_1.fq.gz",
        R2 = "/home/marc/wes_gatk/dev/empty_sample_names/{sample}_{unit}_2.fq.gz"
    output:
        R1 = "trimmed_reads/{sample}_{unit}_1.trimmed.fq.gz",
        R2 = "trimmed_reads/{sample}_{unit}_2.trimmed.fq.gz"
    shell:
        """
        echo -e "{input.R1} >>> {output.R1}"
        echo -e "{input.R2} >>> {output.R2}"
        """

rule align:
    input:
        R1 = "trimmed_reads/{sample}_{unit}_1.trimmed.fq.gz",
        R2 = "trimmed_reads/{sample}_{unit}_2.trimmed.fq.gz"
    output:
        "align/{sample}_{unit}.bam",
    shell:
        """
        echo -e "{input.R1} , {input.R2} {output}"
        """

rule merge:
    input:
        get_align_input
    output:
        "{sample}.merged"
    shell:
        """
        echo -e "{input} >>> {output}"
        """

